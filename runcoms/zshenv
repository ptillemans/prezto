#
# Defines environment variables.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# do not allow system rc files to clobber the configuration
setopt no_global_rcs

# Report CPU usage for commands running longer than 10 seconds
REPORTTIME=10

#
# Paths
#

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  "$HOME/.local/bin"
  /usr/local/{bin,sbin}
  $path
)

# google cloud support
for GSDK in ~pti/Tools/google-cloud-sdk /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk
do
    if [ -d $GSDK ]
    then
        source $GSDK/completion.zsh.inc
        source $GSDK/path.zsh.inc
    fi
done

### Tensorflow support
if [ -d "/usr/local/cuda/lib64" ]; then
    export LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
    path=('/usr/local/cuda/bin' $path)
fi

# Python support with pyenv
if [ -d ${HOME}/.pyenv ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    if [ -x /usr/local/bin/pyenv -o -x /usr/bin/pyenv ]
    then
        # support homebrew location for pyenv
        eval "$(pyenv init -)"
    else
        # support source install location
        eval "$($PYENV_ROOT/bin/pyenv init -)"
    fi
fi

# nix support
if [ -d ${HOME}/.nix-profile/etc ]; then
    source ${HOME}/.nix-profile/etc/profile.d/nix.sh
fi

# rbenv support
if [ -d "$HOME/.rbenv" ]; then
    # Load rbenv settings
    if [ -d "$HOME/.rbenv/bin" ]; then
        path=("$HOME/.rbenv/bin" $path)
    fi
    eval "$(rbenv init -)"
fi

# jEnv support
if [ -d "$HOME/.jenv" ]; then
    path+=("$HOME/.jenv/bin")
    eval "$(jenv init -)"
fi

# node and npm support
if [ -d "$HOME/.npm-packages" ]; then
    path=("$HOME/.npm-packages/bin" $path)
fi

### Added by the Heroku Toolbelt
if [ -d "/usr/local/heroku/bin" ]; then
    path=("/usr/local/heroku/bin" $path)
fi

### Rust support
if [ -d "${HOME}/.cargo/bin" ]; then
    path=("${HOME}/.cargo/bin" $path)
fi


### Haskell support on osx
if [ -d "~/Library/Haskell/bin" ]; then
    path+=("${HOME}/Library/Haskell/bin")
fi

# Haskell/Stack aliases
alias runhaskell='stack runhaskell'
alias ghc='stack exec ghc --'
alias ghci='stack exec ghci --'

# clean up path
vscode_path=`echo $PATH | tr ':' '\n' | grep 'VS Code'`
PATH="`echo $PATH | tr ':' '\n' | grep -v '/mnt/c/' | tr '\n' ':'`:$vscode_path"
typeset -aU path

export GROOVY_HOME=/usr/local/opt/groovy/libexec

# octave, actually gnuplot
export GNUTERM="qt"

# Oracle support
if [ -d $HOME/Tools/oracle ]; then
  export DYLD_LIBRARY_PATH=$HOME/Tools/oracle
  export ORACLE_HOME=$DYLD_LIBRARY_PATH
  export OCI_HOME=$DYLD_LIBRARY_PATH
  export OCI_LIB_DIR=$DYLD_LIBRARY_PATH
  export OCI_INC_DIR=$DYLD_LIBRARY_PATH/sdk/include
fi
if [ "$(uname)" = "Linux" ]; then
  export LD_LIBRARY_PATH=/opt/oracle/instantclient_12_2:$LD_LIBRARY_PATH
fi


# Java support
if [ -x /usr/libexec/java_home ]
then
  export JAVA_HOME=`/usr/libexec/java_home`
fi

# private environment variables not checked in
if [ -f ~/.private.zsh ]
then
  source ~/.private.zsh
fi


### gtags support
export GTAGSLABEL=pygments

# OpenSSL support on OSX
if [ "$(uname)" = "Darwin" ]; then
  export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/
fi


# Sonarqube support
if [ -d "/usr/local/Cellar/sonar-runner/2.7/libexec" ]; then
  SONAR_RUNNER_HOME=/usr/local/Cellar/sonar-runner/2.7/libexec
  export SONAR_RUNNER_HOME
fi

if [[ "$(uname -v)" == *"Microsoft"* ]]; then
  export DOCKER_HOST=tcp://localhost:2375
fi

# github extension for git
if [ -x "`where hub`" ]; then
   eval $(hub alias -s)
fi

if [[ `uname -a` == *microsoft* ]]; then
   export HOST_IP=`cat /etc/resolv.conf | rg nameserver | cut -d ' ' -f2`
   export DISPLAY=$HOST_IP:0
   # export DOCKER_HOST=tcp://$HOST_IP:2375
fi

# GoLang support
if [ -d /usr/local/go ]; then
   export GOROOT=/usr/local/go
fi
if [ -d ~/GoPath ]; then
    export GOPATH=$HOME/GoPath
fi

export JUPYTERLAB_DIR=$HOME/.local/share/jupyter/lab

# direnv local environment
if [ -x "`where direnv`" ]; then
    eval "$(direnv hook zsh)"
fi
