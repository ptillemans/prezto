#
# Defines environment variables.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ ( "$SHLVL" -eq 1 && ! -o LOGIN ) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

# add local path
PATH=~/.local/bin:/usr/local/bin:$PATH:~/bin

#
# add node modules bin directory to path
#
function node-init {
  if (echo $PATH | grep './node_modules/.bin')
  then
    echo "Path already has ./node_modules/.bin added"
  else
    export PATH=./node_modules/.bin:$PATH
    echo "The folder ./node_modules/.bin was added in front of the path."
  fi
}

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
function sdkman-init {
  if (echo $PATH | grep './node_modules/.bin')
  then
    echo "Path already has ./node_modules/.bin added"
  else
    export SDKMAN_DIR="$HOME/.sdkman"
    [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
  fi
}

# set and show java version in shell
function jhome {
  export JAVA_HOME=`/usr/libexec/java_home $@`
  echo "JAVA_HOME:" $JAVA_HOME
  echo "java -version:"
  java -version
}

# golang support
export GOPATH=~/playpen/go
export PATH=$PATH:$GOPATH/bin:/usr/local/opt/go/libexec/bin

# perl5 build
export PERL_MB_OPT="--install_base \"$HOME/perl5\""
export PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"

# groovy support
export GROOVY_HOME=/usr/local/opt/groovy/libexec

# octave
export GNUTERM="qt"
export DYLD_LIBRARY_PATH=$HOME/Tools/oracle
export ORACLE_HOME=$DYLD_LIBRARY_PATH
export OCI_HOME=$DYLD_LIBRARY_PATH
export OCI_LIB_DIR=$DYLD_LIBRARY_PATH
export OCI_INC_DIR=$DYLD_LIBRARY_PATH/sdk/include

# java support
# for Java <8 : max perm size tends to fill up, increase it
# export MAVEN_OPTS="-Xmx512m -XX:MaxPermSize=128M"
# for Java8 and later this is no longer needed
export MAVEN_OPTS="-Xmx512m"

if [ -x /usr/libexec/java_home ]
then
    export JAVA_HOME=`/usr/libexec/java_home`
fi

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
export KAGGLE_BOSCH_DATA_ROOT=~/Dropbox/kaggle

### Rust support
if [ -f "${HOME}/.cargo/env" ]; then
    . ${HOME}/.cargo/env
fi

# added by Anaconda3 installer
export PATH="/usr/local/anaconda3/bin:$PATH"

# private environment variables not checked in
if [ -f ~/.private.zsh ]
then
    source ~/.private.zsh
fi


### Tensorflow support
export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64:${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
export PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}

### python support for the python layer in prezto
export PROJECT_HOME="$HOME/Projects"
export VIRTUALENVWRAPPER_PYTHON=`which python3.6`
export VIRTUALENVWRAPPER_VIRTUALENV=`which virtualenv`
export VIRTUALENVWRAPPER_VIRTUALENV_ARGS=''

### gtags support
export GTAGSLABEL=pygments

### Haskell support
export PATH=$PATH:~/Library/Haskell/bin

# Npm and Yarn support
export PATH=$PATH:~/.npm-packages/bin
export PATH="$HOME/.yarn/bin:$PATH"

# OpenSSL support on OSX
if [ "$(uname)" = "Darwin" ]; then
  export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/
fi

# RVM support
if [ -s "$HOME/.rvm/scripts/rvm" ]; then
  # Load RVM into a shell session *as a function*
  source "$HOME/.rvm/scripts/rvm"
fi

# Oracle support
# this is platform dependent
if [ "$(uname)" = "Linux" ]; then
  export LD_LIBRARY_PATH=/opt/oracle/instantclient_12_2:$LD_LIBRARY_PATH
fi
